{"ast":null,"code":"import { getFirestore, getDocs, collection, where, query } from \"firebase/firestore\";\nconst getProductsFireB = async parametro => {\n  const db = getFirestore();\n  if (parametro) {\n    const q = query(collection(db, \"productos\"), where(\"categoryId\", \"==\", parametro));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } else {\n    const productosRef = collection(db, \"productos\");\n    const snapshot = await getDocs(productosRef);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  }\n\n  /*\n  const productosRef= collection(db,'productos')\n  const snapshot= await getDocs(productosRef)\n  return snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n  */\n};\n\nexport { getProductsFireB };\n\n/*codigo que funciona para MOSTRAR DESDE LA BASE DE DATOS\n\nconst getProductsFireB = async (parametro) =>{\n\n    console.log(parametro);\n  \nconst db = getFirestore()\n\n\nconst productosRef= collection(db,'productos')\n\nconst snapshot= await getDocs(productosRef)\n\n\n    return snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n\n}\n\n\nexport {getProductsFireB}\n\n\n\n*/","map":{"version":3,"names":["getFirestore","getDocs","collection","where","query","getProductsFireB","parametro","db","q","snapshot","docs","map","doc","id","data","productosRef"],"sources":["/Users/indiradamico/Desktop/practica-mi-primera-app/src/services/Firebase/Firebase.js"],"sourcesContent":["import {\n  getFirestore,\n  getDocs,\n  collection,\n  where,\n  query,\n} from \"firebase/firestore\";\n\nconst getProductsFireB = async (parametro) => {\n  const db = getFirestore();\n\n  if (parametro) {\n\n    const q = query(\n      collection(db, \"productos\"),\n      where(\"categoryId\", \"==\", parametro),\n      \n    );\n\n    const snapshot = await getDocs(q);\n\n    return snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n\n\n  } else {\n\n\n    const productosRef = collection(db, \"productos\");\n\n    const snapshot = await getDocs(productosRef);\n\n    return snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n  }\n\n  /*\n\nconst productosRef= collection(db,'productos')\n\nconst snapshot= await getDocs(productosRef)\n\n\nreturn snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n\n\n*/\n};\n\nexport { getProductsFireB };\n\n\n\n\n\n\n\n\n\n\n\n/*codigo que funciona para MOSTRAR DESDE LA BASE DE DATOS\n\nconst getProductsFireB = async (parametro) =>{\n\n    console.log(parametro);\n  \nconst db = getFirestore()\n\n\nconst productosRef= collection(db,'productos')\n\nconst snapshot= await getDocs(productosRef)\n\n\n    return snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n\n}\n\n\nexport {getProductsFireB}\n\n\n\n*/\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,OAAO,EACPC,UAAU,EACVC,KAAK,EACLC,KAAK,QACA,oBAAoB;AAE3B,MAAMC,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EAC5C,MAAMC,EAAE,GAAGP,YAAY,CAAC,CAAC;EAEzB,IAAIM,SAAS,EAAE;IAEb,MAAME,CAAC,GAAGJ,KAAK,CACbF,UAAU,CAACK,EAAE,EAAE,WAAW,CAAC,EAC3BJ,KAAK,CAAC,YAAY,EAAE,IAAI,EAAEG,SAAS,CAErC,CAAC;IAED,MAAMG,QAAQ,GAAG,MAAMR,OAAO,CAACO,CAAC,CAAC;IAEjC,OAAOC,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;MAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;MAAE,GAAGD,GAAG,CAACE,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EAGpE,CAAC,MAAM;IAGL,MAAMC,YAAY,GAAGb,UAAU,CAACK,EAAE,EAAE,WAAW,CAAC;IAEhD,MAAME,QAAQ,GAAG,MAAMR,OAAO,CAACc,YAAY,CAAC;IAE5C,OAAON,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;MAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;MAAE,GAAGD,GAAG,CAACE,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACpE;;EAEA;AACF;AACA;AACA;AACA;AAOA,CAAC;;AAED,SAAST,gBAAgB;;AAYzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}