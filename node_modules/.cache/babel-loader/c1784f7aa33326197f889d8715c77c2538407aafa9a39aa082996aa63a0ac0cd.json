{"ast":null,"code":"var _jsxFileName = \"/Users/indiradamico/Desktop/avances del proyecto final/src/contex/CartContex.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContex = /*#__PURE__*/createContext([]);\nconst CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [listaDelCarrito, setListaDelCarrito] = useState([]);\n  const [cantidad, setCantidad] = useState(0);\n  const addProduct = (producto, cantidad) => {\n    if (isInCart(producto.id)) {\n      setListaDelCarrito(listaDelCarrito.map(itemDeListado => {\n        return itemDeListado.id === producto.id ? {\n          ...itemDeListado,\n          cantidad: itemDeListado.cantidad + cantidad\n        } : itemDeListado;\n      }));\n      log;\n    } else {\n      setListaDelCarrito([...listaDelCarrito, {\n        ...producto,\n        cantidad\n      }]);\n    }\n\n    /*\n      const addProduct = (producto, cantidad) => {\n    \n        if (listaDelCarrito.find((x) => x.id === producto.id)) {\n          return console.log(\"YA AGREGARDP\");\n        }\n    \n        setListaDelCarrito([...listaDelCarrito, producto])\n    \n        setCantidad(cantidad)\n    \n        console.log(listaDelCarrito);\n    \n        // console.log(producto);\n        //console.log(cantidad);\n    \n    \n      }\n    */\n\n    // const limpiarListadoDelCarrito = () => setListaDelCarrito([]);\n\n    const isInCart = id => listaDelCarrito.find(x => x.id === id) ? true : false;\n\n    //const eliminarProducto = (id) => { setListaDelCarrito(listaDelCarrito.filter((x) => x.id !== id)) };\n\n    return /*#__PURE__*/_jsxDEV(CartContex.Provider, {\n      value: {\n        addProduct,\n        listaDelCarrito,\n        cantidad,\n        isInCart\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(CartProvider, \"E95fX29IlVR6vKJTycyebieAa4Q=\");\n_c = CartProvider;\nexport { CartProvider, CartContex };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","CartContex","CartProvider","_ref","_s","children","listaDelCarrito","setListaDelCarrito","cantidad","setCantidad","addProduct","producto","isInCart","id","map","itemDeListado","log","find","x","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/indiradamico/Desktop/avances del proyecto final/src/contex/CartContex.jsx"],"sourcesContent":["import { createContext, useState } from \"react\"\n\nconst CartContex = createContext([])\n\n\nconst CartProvider = ({ children }) => {\n\n  const [listaDelCarrito, setListaDelCarrito] = useState([])\n\n  const [cantidad, setCantidad] = useState(0)\n\n\n  const addProduct = (producto, cantidad) => {\n\n    if (isInCart(producto.id)) { setListaDelCarrito(listaDelCarrito.map\n      \n      (itemDeListado => {return itemDeListado.id === producto.id ? { ...itemDeListado,cantidad: itemDeListado.cantidad + cantidad } : itemDeListado}));\n\n      log\n\n  }else{\n\n    setListaDelCarrito([...listaDelCarrito,{...producto,cantidad}])\n  }\n\n\n/*\n  const addProduct = (producto, cantidad) => {\n\n    if (listaDelCarrito.find((x) => x.id === producto.id)) {\n      return console.log(\"YA AGREGARDP\");\n    }\n\n    setListaDelCarrito([...listaDelCarrito, producto])\n\n    setCantidad(cantidad)\n\n    console.log(listaDelCarrito);\n\n    // console.log(producto);\n    //console.log(cantidad);\n\n\n  }\n*/\n \n\n // const limpiarListadoDelCarrito = () => setListaDelCarrito([]);\n\n  const isInCart = (id) => listaDelCarrito.find((x) => x.id === id) ? true : false;\n\n  //const eliminarProducto = (id) => { setListaDelCarrito(listaDelCarrito.filter((x) => x.id !== id)) };\n\n\n\n  return (\n\n    <CartContex.Provider value={{ addProduct, listaDelCarrito, cantidad,isInCart }}>\n      {children}\n    </CartContex.Provider>\n\n  )\n}\n}\n\nexport { CartProvider, CartContex }"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,gBAAGJ,aAAa,CAAC,EAAE,CAAC;AAGpC,MAAMK,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAEhC,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAG3C,MAAMY,UAAU,GAAGA,CAACC,QAAQ,EAAEH,QAAQ,KAAK;IAEzC,IAAII,QAAQ,CAACD,QAAQ,CAACE,EAAE,CAAC,EAAE;MAAEN,kBAAkB,CAACD,eAAe,CAACQ,GAAG,CAEhEC,aAAa,IAAI;QAAC,OAAOA,aAAa,CAACF,EAAE,KAAKF,QAAQ,CAACE,EAAE,GAAG;UAAE,GAAGE,aAAa;UAACP,QAAQ,EAAEO,aAAa,CAACP,QAAQ,GAAGA;QAAS,CAAC,GAAGO,aAAa;MAAA,CAAC,CAAC,CAAC;MAEhJC,GAAG;IAEP,CAAC,MAAI;MAEHT,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAC;QAAC,GAAGK,QAAQ;QAACH;MAAQ,CAAC,CAAC,CAAC;IACjE;;IAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGC;;IAEC,MAAMI,QAAQ,GAAIC,EAAE,IAAKP,eAAe,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKA,EAAE,CAAC,GAAG,IAAI,GAAG,KAAK;;IAEhF;;IAIA,oBAEEb,OAAA,CAACC,UAAU,CAACkB,QAAQ;MAACC,KAAK,EAAE;QAAEV,UAAU;QAAEJ,eAAe;QAAEE,QAAQ;QAACI;MAAS,CAAE;MAAAP,QAAA,EAC5EA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAG1B,CAAC;AACD,CAAC;AAAApB,EAAA,CA1DKF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA4DlB,SAASA,YAAY,EAAED,UAAU;AAAE,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}