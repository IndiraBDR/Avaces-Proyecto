{"ast":null,"code":"import { getFirestore, getDocs, collection, where, query } from \"firebase/firestore\";\nconst getProductsFireB = async parametro => {\n  const db = getFirestore();\n  if (parametro) {\n    const q = query(collection(db, \"productos\"), where(\"categoryId\", \"==\", parametro));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } else {\n    const productosRef = collection(db, 'productos');\n    const snapshot = await getDocs(productosRef);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  }\n\n  /*\n  \n  const productosRef= collection(db,'productos')\n  \n  const snapshot= await getDocs(productosRef)\n  \n  \n  return snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n  \n  \n  */\n};\n\nexport { getProductsFireB };\n\n/*codigo que funciona para MOSTRAR DESDE LA BASE DE DATOS\n\nconst getProductsFireB = async (parametro) =>{\n\n    console.log(parametro);\n  \nconst db = getFirestore()\n\n\nconst productosRef= collection(db,'productos')\n\nconst snapshot= await getDocs(productosRef)\n\n\n    return snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n\n}\n\n\nexport {getProductsFireB}\n\n\n\n*/","map":{"version":3,"names":["getFirestore","getDocs","collection","where","query","getProductsFireB","parametro","db","q","snapshot","docs","map","doc","id","data","productosRef"],"sources":["/Users/indiradamico/Desktop/practica-mi-primera-app/src/services/Firebase/Firebase.js"],"sourcesContent":["import {  getFirestore, getDocs, collection,where,query} from \"firebase/firestore\";\n\nconst getProductsFireB = async (parametro) =>{\nconst db = getFirestore()\n  \nif(parametro){\n\n    const q = query(\n        collection(db, \"productos\"),\n        where(\"categoryId\", \"==\", parametro)\n      );\n    \n\n    \n    const snapshot= await getDocs(q)\n    \n    \n    return snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n}else{\n\n    const productosRef= collection(db,'productos')\n\nconst snapshot= await getDocs(productosRef)\n\n\nreturn snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n\n}\n\n\n\n  \n/*\n\nconst productosRef= collection(db,'productos')\n\nconst snapshot= await getDocs(productosRef)\n\n\nreturn snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n\n\n*/\n\n}\n\n\nexport {getProductsFireB}\n\n\n\n\n\n\n/*codigo que funciona para MOSTRAR DESDE LA BASE DE DATOS\n\nconst getProductsFireB = async (parametro) =>{\n\n    console.log(parametro);\n  \nconst db = getFirestore()\n\n\nconst productosRef= collection(db,'productos')\n\nconst snapshot= await getDocs(productosRef)\n\n\n    return snapshot.docs.map((doc)=>({ id:doc.id, ...doc.data()}))\n\n}\n\n\nexport {getProductsFireB}\n\n\n\n*/ "],"mappings":"AAAA,SAAUA,YAAY,EAAEC,OAAO,EAAEC,UAAU,EAACC,KAAK,EAACC,KAAK,QAAO,oBAAoB;AAElF,MAAMC,gBAAgB,GAAG,MAAOC,SAAS,IAAI;EAC7C,MAAMC,EAAE,GAAGP,YAAY,CAAC,CAAC;EAEzB,IAAGM,SAAS,EAAC;IAET,MAAME,CAAC,GAAGJ,KAAK,CACXF,UAAU,CAACK,EAAE,EAAE,WAAW,CAAC,EAC3BJ,KAAK,CAAC,YAAY,EAAE,IAAI,EAAEG,SAAS,CACrC,CAAC;IAIH,MAAMG,QAAQ,GAAE,MAAMR,OAAO,CAACO,CAAC,CAAC;IAGhC,OAAOC,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAI;MAAEC,EAAE,EAACD,GAAG,CAACC,EAAE;MAAE,GAAGD,GAAG,CAACE,IAAI,CAAC;IAAC,CAAC,CAAC,CAAC;EAClE,CAAC,MAAI;IAED,MAAMC,YAAY,GAAEb,UAAU,CAACK,EAAE,EAAC,WAAW,CAAC;IAElD,MAAME,QAAQ,GAAE,MAAMR,OAAO,CAACc,YAAY,CAAC;IAG3C,OAAON,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAI;MAAEC,EAAE,EAACD,GAAG,CAACC,EAAE;MAAE,GAAGD,GAAG,CAACE,IAAI,CAAC;IAAC,CAAC,CAAC,CAAC;EAE9D;;EAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC;;AAGD,SAAQT,gBAAgB;;AAOxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}